{"version":3,"file":"static/js/876.43a5c0e6.chunk.js","mappings":"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","sources":["components/ContactForm/ContactFormStyled.js","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactListStyled.js","components/ContactList/ContactList.jsx","components/FileContainer/StyledContainer.js","components/SearchBar/SearchBarStyled.js","components/SearchBar/SearchBar.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledContactDiv = styled.div`\nborder: none;\nborder-radius: 5px;\nbackground-color: #f2f2f2;\npadding: 20px;\nbox-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n`;\n\nexport const StyledContactForm = styled.form`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\ngap: 10px;\n`;\n\nexport const StyledSpan = styled.span`\nfont-size: 20px;\nfont-weight: 500;\ntext-align: center;\nmargin-bottom: 5px;\n`;\n\nexport const StyledLabel = styled.label`\ndisplay: flex;\n  flex-direction: column;\n`;\n\nexport const StyledInput = styled.input`\n  max-width: 100%;\n  min-width: 300px;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-sizing: border-box;\n`;\n\nexport const StyledBtn = styled.button`\npadding: 10px 20px;\nborder: none;\nborder-radius: 5px;\ncursor: pointer;\ncolor: white;\nfont-weight: 500;\nbackground-color: #1560bd;\ntransition: transform 250ms cubic-bezier(0.56, 0.57, 0.76, 0.76);\n\n&:hover{\n    background-color: #7B68EE;\n    transform: scale(1.1);\n}\n`;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n        return contacts.filter(({ name }) =>\n            name.toLowerCase().includes(filter)\n        );\n    }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  StyledBtn,\n  StyledContactDiv,\n  StyledContactForm,\n  StyledInput,\n  StyledLabel,\n  StyledSpan,\n} from './ContactFormStyled';\n\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/contactsOperations';\n\nexport default function ContactForm() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const elements = event.currentTarget.elements;\n    const name = elements.contactName.value;\n    const number = elements.contactNumber.value;\n    if (\n      contacts.some(value => value.name.toLowerCase() === name.toLowerCase())\n    ) {\n      alert(`${name} is alredy in contacts`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n    event.currentTarget.reset();\n  };\n\n  return (\n    <StyledContactDiv>\n      <StyledContactForm onSubmit={handleSubmit}>\n        <StyledLabel>\n          <StyledSpan>Name</StyledSpan>\n          <StyledInput\n            type=\"text\"\n            name=\"contactName\"\n            placeholder=\"Contact name...\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </StyledLabel>\n        <StyledLabel>\n          <StyledSpan>Number</StyledSpan>\n          <StyledInput\n            type=\"tel\"\n            name=\"contactNumber\"\n            placeholder=\"Contact number...\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </StyledLabel>\n        <StyledBtn type=\"submit\">Add contact</StyledBtn>\n      </StyledContactForm>\n    </StyledContactDiv>\n  );\n}\n","import styled from 'styled-components';\n\nexport const StyledContactList = styled.ul`\nlist-style: none;\nmargin: 0 auto;\npadding: 0;\n`;\n\nexport const StyledContact = styled.li`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmargin: 0 auto;\ngap: 20px;\npadding-top: 8px;\npadding-bottom: 8px;\n`;\n\nexport const StyledDatas = styled.p`\nmargin: 0;\npadding: 0;\nfont-weight: 500;\n`;\n\nexport const StyledListBtn = styled.button`\nborder: none ;\nborder-radius: 5px;\npadding: 8px 12px;\nfont-size: 14px;\nfont-weight: 500;\ncolor: #FF0800;\nbackground-color: transparent;\ncursor: pointer;\ntransition: 0.3s;\n\n&:hover{\n    color: white;\n    background-color:#FF0800 ;\n}\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  StyledContact,\n  StyledContactList,\n  StyledDatas,\n  StyledListBtn,\n} from './ContactListStyled';\nimport { selectFilteredContacts } from 'redux/selectors';\nimport { deleteContact, fetchContacts } from 'redux/contactsOperations';\nimport { useEffect } from 'react';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n  const userData = useSelector(state => state.user.userData);\n  useEffect(() => {\n    if (!userData) return;\n\n    dispatch(fetchContacts());\n  }, [dispatch, userData]);\n  return (\n    <StyledContactList>\n      {filteredContacts.map(({ id, phone, name }) => {\n        return (\n          <StyledContact key={id}>\n            <StyledDatas>\n              {name}: {phone}\n            </StyledDatas>\n            <StyledListBtn\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => {\n                dispatch(deleteContact(id));\n              }}\n            >\n              Delete\n            </StyledListBtn>\n          </StyledContact>\n        );\n      })}\n    </StyledContactList>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const StyledMainContainer = styled.div`\nmax-width: 400px;\nmin-width: 300px;\nmargin-top: 25px;\nmargin-bottom: 25px;\nmargin-left: auto;\nmargin-right: auto;\n`;","import styled from 'styled-components';\n\nexport const StyledSearchDiv = styled.div`\nborder: none;\nborder-radius: 5px;\nbackground-color: #f2f2f2;\npadding: 20px;\nbox-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n`;\n\nexport const StyledSearchLabel = styled.label`\ndisplay: flex;\n  flex-direction: column;\n`;\n\nexport const StyledSearchSpan = styled.span`\nfont-style: italic;\nfont-size: 20px;\nfont-weight: 500;\ntext-align: center;\nmargin-bottom: 5px;\n`;\n\nexport const StyledSearchInput = styled.input`\n  max-width: 100%;\n  min-width: 300px;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-sizing: border-box;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  StyledSearchDiv,\n  StyledSearchInput,\n  StyledSearchLabel,\n  StyledSearchSpan,\n} from './SearchBarStyled';\nimport { selectFilter } from 'redux/selectors';\nimport { setFilter } from 'redux/searchBarSlice';\n\nconst SearchBar = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const handleChangeFilterInput = event => {\n    dispatch(setFilter(event.target.value));\n  };\n  return (\n    <StyledSearchDiv>\n      <StyledSearchLabel>\n        <StyledSearchSpan>Find contacts by name</StyledSearchSpan>\n        <StyledSearchInput\n          type=\"text\"\n          name=\"Search Bar\"\n          placeholder=\"Search contact...\"\n          value={filter}\n          onChange={handleChangeFilterInput}\n        />\n      </StyledSearchLabel>\n    </StyledSearchDiv>\n  );\n};\n\nexport default SearchBar;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport { StyledMainContainer } from 'components/FileContainer/StyledContainer';\nimport Loader from 'components/Loader/Loader';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/selectors';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  return (\n    <StyledMainContainer>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {isLoading && !error && <Loader />}\n      <SearchBar />\n      {error && error}\n      <ContactList />\n    </StyledMainContainer>\n  );\n};\n\nexport default Contacts;\n"],"names":["StyledContactDiv","styled","_templateObject","_taggedTemplateLiteral","StyledContactForm","_templateObject2","StyledSpan","_templateObject3","StyledLabel","_templateObject4","StyledInput","_templateObject5","StyledBtn","_templateObject6","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","_ref","name","toLowerCase","includes","ContactForm","useSelector","dispatch","useDispatch","_jsx","children","_jsxs","onSubmit","event","preventDefault","elements","currentTarget","contactName","value","number","contactNumber","some","alert","concat","addContact","reset","type","placeholder","pattern","title","required","StyledContactList","StyledContact","StyledDatas","StyledListBtn","filteredContacts","userData","user","useEffect","fetchContacts","map","id","phone","onClick","deleteContact","StyledMainContainer","StyledSearchDiv","StyledSearchLabel","StyledSearchSpan","StyledSearchInput","onChange","setFilter","target","Loader","SearchBar","ContactList"],"sourceRoot":""}