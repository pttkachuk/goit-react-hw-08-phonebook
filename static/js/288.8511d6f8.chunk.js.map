{"version":3,"file":"static/js/288.8511d6f8.chunk.js","mappings":"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","sources":["components/ContactForm/ContactFormStyled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactListStyled.js","components/ContactList/ContactList.jsx","components/FileContainer/StyledContainer.js","components/SearchBar/SearchBarStyled.js","components/SearchBar/SearchBar.jsx","pages/StyledPages/StyledContactsPage.js","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledContactDiv = styled.div`\nborder: none;\nborder-radius: 5px;\nbackground-color: #f2f2f2;\npadding: 20px;\nbox-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n`;\n\nexport const StyledContactForm = styled.form`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\ngap: 10px;\n`;\n\nexport const StyledSpan = styled.span`\nfont-size: 20px;\nfont-weight: 500;\ntext-align: center;\nmargin-bottom: 5px;\n`;\n\nexport const StyledLabel = styled.label`\ndisplay: flex;\n  flex-direction: column;\n`;\n\nexport const StyledInput = styled.input`\n  max-width: 100%;\n  min-width: 300px;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-sizing: border-box;\n`;\n\nexport const StyledBtn = styled.button`\npadding: 10px 20px;\nborder: none;\nborder-radius: 5px;\ncursor: pointer;\ncolor: white;\nfont-weight: 500;\nbackground-color: #1560bd;\ntransition: transform 250ms cubic-bezier(0.56, 0.57, 0.76, 0.76);\n\n&:hover{\n    background-color: #7B68EE;\n    transform: scale(1.1);\n}\n`;","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n        return contacts.filter(({ name }) =>\n            name.toLowerCase().includes(filter)\n        );\n    }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  StyledBtn,\n  StyledContactDiv,\n  StyledContactForm,\n  StyledInput,\n  StyledLabel,\n  StyledSpan,\n} from './ContactFormStyled';\n\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nexport default function ContactForm() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const elements = event.currentTarget.elements;\n    const name = elements.contactName.value;\n    const number = elements.contactNumber.value;\n    if (\n      contacts.some(value => value.name.toLowerCase() === name.toLowerCase())\n    ) {\n      alert(`${name} is alredy in contacts`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n    event.currentTarget.reset();\n  };\n\n  return (\n    <StyledContactDiv>\n      <StyledContactForm onSubmit={handleSubmit}>\n        <StyledLabel>\n          <StyledSpan>Name</StyledSpan>\n          <StyledInput\n            type=\"text\"\n            name=\"contactName\"\n            placeholder=\"Contact name...\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </StyledLabel>\n        <StyledLabel>\n          <StyledSpan>Number</StyledSpan>\n          <StyledInput\n            type=\"tel\"\n            name=\"contactNumber\"\n            placeholder=\"Contact number...\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </StyledLabel>\n        <StyledBtn type=\"submit\">Add contact</StyledBtn>\n      </StyledContactForm>\n    </StyledContactDiv>\n  );\n}\n","import styled from 'styled-components';\n\nexport const StyledContactList = styled.ul`\nlist-style: none;\nmargin: 0 auto;\npadding: 0;\n`;\n\nexport const StyledContact = styled.li`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmargin: 0 auto;\ngap: 20px;\npadding-top: 8px;\npadding-bottom: 8px;\n`;\n\nexport const StyledDatas = styled.p`\nmargin: 0;\npadding: 0;\nfont-weight: 500;\n`;\n\nexport const StyledListBtn = styled.button`\nborder: none ;\nborder-radius: 5px;\npadding: 8px 12px;\nfont-size: 14px;\nfont-weight: 500;\ncolor: #FF0800;\nbackground-color: transparent;\ncursor: pointer;\ntransition: 0.3s;\n\n&:hover{\n    color: white;\n    background-color:#FF0800 ;\n}\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  StyledContact,\n  StyledContactList,\n  StyledDatas,\n  StyledListBtn,\n} from './ContactListStyled';\nimport { selectFilteredContacts } from 'redux/selectors';\nimport {\n  deleteContact,\n  fetchContacts,\n} from 'redux/contacts/contactsOperations';\nimport { useEffect } from 'react';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n  const userData = useSelector(state => state.user.userData);\n  useEffect(() => {\n    if (!userData) return;\n\n    dispatch(fetchContacts());\n  }, [dispatch, userData]);\n  return (\n    <StyledContactList>\n      {filteredContacts.map(({ id, phone, name }) => {\n        return (\n          <StyledContact key={id}>\n            <StyledDatas>\n              {name}: {phone}\n            </StyledDatas>\n            <StyledListBtn\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => {\n                dispatch(deleteContact(id));\n              }}\n            >\n              Delete\n            </StyledListBtn>\n          </StyledContact>\n        );\n      })}\n    </StyledContactList>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const StyledMainContainer = styled.div`\nmax-width: 400px;\nmin-width: 300px;\nmargin-top: 25px;\nmargin-bottom: 25px;\nmargin-left: auto;\nmargin-right: auto;\n`;","import styled from 'styled-components';\n\nexport const StyledSearchDiv = styled.div`\nborder: none;\nborder-radius: 5px;\nbackground-color: #f2f2f2;\npadding: 20px;\nbox-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n`;\n\nexport const StyledSearchLabel = styled.label`\ndisplay: flex;\n  flex-direction: column;\n`;\n\nexport const StyledSearchSpan = styled.span`\nfont-style: italic;\nfont-size: 20px;\nfont-weight: 500;\ntext-align: center;\nmargin-bottom: 5px;\n`;\n\nexport const StyledSearchInput = styled.input`\n  max-width: 100%;\n  min-width: 300px;\n  padding: 12px 20px;\n  margin: 8px 0;\n  display: inline-block;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-sizing: border-box;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  StyledSearchDiv,\n  StyledSearchInput,\n  StyledSearchLabel,\n  StyledSearchSpan,\n} from './SearchBarStyled';\nimport { selectFilter } from 'redux/selectors';\nimport { setFilter } from 'redux/searchBar/searchBarSlice';\n\nconst SearchBar = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const handleChangeFilterInput = event => {\n    dispatch(setFilter(event.target.value));\n  };\n  return (\n    <StyledSearchDiv>\n      <StyledSearchLabel>\n        <StyledSearchSpan>Find contacts by name</StyledSearchSpan>\n        <StyledSearchInput\n          type=\"text\"\n          name=\"Search Bar\"\n          placeholder=\"Search contact...\"\n          value={filter}\n          onChange={handleChangeFilterInput}\n        />\n      </StyledSearchLabel>\n    </StyledSearchDiv>\n  );\n};\n\nexport default SearchBar;\n","import styled from 'styled-components';\n\nexport const StyledContactsTitle = styled.h1`\ntext-align: center;\nfont-weight:400;\n`;\n\nexport const StyledSecondContTitle = styled.h2`\ntext-align: center;\nfont-weight:400;\n`;","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport { StyledMainContainer } from 'components/FileContainer/StyledContainer';\nimport Loader from 'components/Loader/Loader';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/selectors';\nimport {\n  StyledContactsTitle,\n  StyledSecondContTitle,\n} from './StyledPages/StyledContactsPage';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  return (\n    <StyledMainContainer>\n      <StyledContactsTitle>Add Contact</StyledContactsTitle>\n      <ContactForm />\n      <StyledSecondContTitle>Find Contact</StyledSecondContTitle>\n      {isLoading && !error && <Loader />}\n      <SearchBar />\n      {error && error}\n      <ContactList />\n    </StyledMainContainer>\n  );\n};\n\nexport default Contacts;\n"],"names":["StyledContactDiv","styled","_templateObject","_taggedTemplateLiteral","StyledContactForm","_templateObject2","StyledSpan","_templateObject3","StyledLabel","_templateObject4","StyledInput","_templateObject5","StyledBtn","_templateObject6","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","_ref","toLowerCase","includes","ContactForm","useSelector","dispatch","useDispatch","_jsx","children","_jsxs","onSubmit","event","preventDefault","elements","currentTarget","contactName","number","contactNumber","some","alert","addContact","reset","type","placeholder","pattern","title","required","StyledContactList","StyledContact","StyledDatas","StyledListBtn","filteredContacts","userData","user","useEffect","fetchContacts","id","phone","onClick","deleteContact","StyledMainContainer","StyledSearchDiv","StyledSearchLabel","StyledSearchSpan","StyledSearchInput","onChange","setFilter","target","StyledContactsTitle","StyledSecondContTitle","Loader","SearchBar","ContactList"],"sourceRoot":""}